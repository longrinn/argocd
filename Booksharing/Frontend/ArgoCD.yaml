apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    appgw.ingress.kubernetes.io/health-probe-status-codes: 200-499
    appgw.ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: cert-manager-global
    external-dns.alpha.kubernetes.io/hostname: booksharing.app.mddinternship.com
  labels:
    app: frontend
  name: frontend-ingress
spec:
  rules:
    - host: booksharing.app.mddinternship.com
      http:
        paths:
          - backend:
              service:
                name: front-service
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - booksharing.app.mddinternship.com
      secretName: booksharing-frontend-tls
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
apiVersion: v1
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJuZXh1cy50b29sLm1kZGludGVybnNoaXAuY29tIjogewogICAgICAiYXV0aCI6ICJZV1J0YVc0NmJtVjRkWE5CWkcxcGJnPT0iCiAgICB9CiAgfQp9Cg==
kind: Secret
metadata:
  name: nexus-docker
type: kubernetes.io/dockerconfigjson
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: bsfrontend
          image: nexus.tool.mddinternship.com/repository/booksharing_fe:1.0.21
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: nexus-docker
